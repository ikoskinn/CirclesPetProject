// <auto-generated />
using System;
using DotByDot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotByDot.Data.Migrations
{
    [DbContext(typeof(DotByDotContext))]
    [Migration("20240529010955_AnnotationsFixed")]
    partial class AnnotationsFixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotByDot.Core.Domain.Models.Circle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CircleSetId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int>("CoordX")
                        .HasColumnType("int");

                    b.Property<int>("CoordY")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Diameter")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CircleSetId");

                    b.ToTable("Circles");
                });

            modelBuilder.Entity("DotByDot.Core.Domain.Models.CircleSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("CircleSets");
                });

            modelBuilder.Entity("DotByDot.Core.Domain.Models.Circle", b =>
                {
                    b.HasOne("DotByDot.Core.Domain.Models.CircleSet", null)
                        .WithMany("Circles")
                        .HasForeignKey("CircleSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DotByDot.Core.Domain.Models.CircleSet", b =>
                {
                    b.Navigation("Circles");
                });
#pragma warning restore 612, 618
        }
    }
}
